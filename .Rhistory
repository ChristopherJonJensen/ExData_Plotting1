ls
help.start
help.start()
getwd()
setwd("C:/Users/Chris/My Documents/R/")
getwd()
q()
find.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
library(devtools)
find_rtools()
echo
print
print ("this is Chris Jensen's RStudio Install")
print ("This is Chris Jensen's RStudio Install")
fux <- "two fucks"
print (c("what do I give?" + " " + fux))
print (cc("what do I give?" + " " + fux))
print (cat("what do I give?" + " " + fux))
?c
print (c("what do I give?" , " " , fux))
abs(-111)
rep(0,12)
fix(fux)
c(TRUE,FALSE)&c(TRUE,TRUE)
c(TRUE,FALSE)&&c(TRUE,TRUE)
install.packages("lsr")
install.packages("psych")
install.packages("car")
library("lsr", lib.loc="~/R/win-library/3.1")
who
who()
q()
a<- rnorm(n=50,mean = 50)
b<- a*rnorm(50)
c<-as.factor(gl(n=2,k=25,length=50,labels = c("butts","front butts")))
c
important <- data.frame(a,b,c)
who(expand==TRUE)
library(lsr)
who(expand==TRUE)
who(expand=TRUE)
library(datasets)
who(datasets)
?datasets
library(help = "datasets")
boat <- Titanic
head(boat)
boat
head(Nile)
head(iris)
head(Loblolly)
tree<-Loblolly
mean(tree$height)
mean(tree$age)
by(tree, tree$seed, mean(tree$age))
?by
by(tree, tree$Seed, mean(tree$age))
by(tree, tree$Seed, mean(tree))
by(tree, tree$Seed, mean)
by(tree$height, tree$Seed, mean)
summary(tree$height)
by(tree$height, tree$Seed, summary)
mean(tree$height)
median(tree$height)
mean(tree$height, trim = .1)
mean(tree$height, trim = .2)
mean(tree$height, trim = .5)
mean(tree$height, trim = .4)
mean(tree$height, trim = .3)
length(tree$height)
tail(tree$height)
range(tree$height)
range(tree$Seed)
hist(tree$height)
IQR(tree$height)
quantile(tree$height, .5)
quantile(tree$height, c(.25,.75))
quantile(tree$height, c(0,1))
boxplot(tree$height)
library(psych)
skew(tree$height)
kurtosi(tree$height)
by(data=iris, INDICES = iris$Species, summary)
summary(tree)
plot(tree$height,tree$age)
cor(tree$height,tree$age)
head(tree,20)
anscombe
unique(tree$Seed)
temp <- by(tree$Seed, INDICES=unique(tree$Seed),length)
temp <- by(tree$Seed, INDICES=unique(tree$Seed),nrow)
?rle
temp <- rle(sort(tree$Seed))
poo <- tree$Seed
poo
rle(poo)
length(poo[unique(poo)])
poo[unique(poo)]
tabulate(tree$Seed)
?tabulate
tree
length(tabulate(tree$Seed))
hist(tree$height)
hist(tree$height,breaks = 14)
hist(tree$height,breaks = 20)
hist(tree$height,breaks = 25)
stem(tree$height)
subset(poo,poo==329)
rle(x = as.integer(tree$Height))
poo <- as.integer(tree$Height)
tree$Height
poo <- as.integer(tree$height)
poo
rle(poo)
rle(sort(poo))
?fivenum
summary(tree$Height)
summary(tree$height)
fivenum(tree$height)
boxplot(tree$height)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created<-h5createFile("test.h5")
created = h5createGroup("test.h5","butts")
created = h5createGroup("test.h5","frontbutts")
created = h5createGroup("test.h5","butts/poops")
h5ls("test.h5")
library(httr)
oauth_endpoints("github")
my_app<-oauth_app("github", appname = "TestApplication", key = "b015a47f9e6b4520a46e",secret = "f629972f41bc470c146bfbb5f2f6ad796827ff6e")
my_app<-oauth_app("github", appname = "TestApplication", key = "b015a47f9e6b4520a46e",secret = "f629972f41bc470c146bfbb5f2f6ad796827ff6e")
my_app<-oauth_app(appname = "TestApplication", key = "b015a47f9e6b4520a46e",secret = "f629972f41bc470c146bfbb5f2f6ad796827ff6e")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"),my_app)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"),my_app)
github_token <- oauth2.0_token(oauth_endpoints("github"),my_app)
gtoken <- config(token = github_token)
library(httr)
library(httruv)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", "b015a47f9e6b4520a46e")
myapp <- oauth_app("github", "b015a47f9e6b4520a46e", secret = "f629972f41bc470c146bfbb5f2f6ad796827ff6e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
head(req)
stop_for_status(req)
content(req)
library(jsonlite)
temp <- unserializeJSON(req)
class(req)
serialize(req)
req <- GET("https://api.github.com/users/jtleek/repos", sort="created", gtoken)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos/datasharing", gtoken)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos/datasharing/", gtoken)
stop_for_status(req)
req <- GET("https://github.com/jtleek/datasharing", gtoken)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
temp <- fromJSON(req)
temp <- fromJSON(toJSON(req))
temp <- fromJSON(toJSON(req))
length(req)
req[1]
req[2]
req[3]
req[4]
req[5]
req[6]
req[7]
conn <- readLines(con = url("http://biostat.jhsph.edu/~jleek/contact.html))
)
)
""
)
)
buttz <- 1:5
cheekz <- seq(along=buttz)
buttz <- c(1,4,6,8,10)
cheekz <- seq(along=buttz)
cheekz[3]
cheekz[4]
idaho <- read.csv(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
idaho <- read.csv(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"))
names(idaho)
beav <- strsplit(names(idaho),split = "wgtp")
beav[123]
gdp<-read.csv(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"))
names(gdp)
gdp$nocomma <- sub(",","",gdp$Gross.domestic.product.2012)
mean(gdp$nocomma)
gdp$nocomma
head(gdp)
gdp$nocomma <- sub(",","",gdp$X.3)
gdp$nocomma
gdp[,195]
gdp[195,]
gdp[194,]
gdp[2,]
gdp[3,]
gdp[4,]
gdp[5,]
gdp$nocomma <- sub("*,","",gdp$X.3,)
gdp[5,]
gdp$nocomma <- sub("*,","",gdp$X.3)
gdp[5,]
gdp$nocomma <- gsub(",","",gdp$X.3)
gdp[5,]
mean(gdp$nocomma,na.rm = TRUE)
mean(gdp[5:194,$nocomma],na.rm = TRUE)
mean(gdp[5:194,11],na.rm = TRUE)
gdp[5:194,11]
mean(as.numeric(gdp[5:194,11]),na.rm = TRUE)
head(gdp)
CountryNames <- gdp[5:194,match(x="X.2",names(gdp))]
CountryNames
grep("^United",CountryNames)
grep("*United",CountryNames)
educ <- read.csv(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"))
mo_gdp <- gdp[5:194,]
educ
head(educ)
head(gdp,2)
head(educ,1)
playa <- merge(gdp,educ,by.x="X",by.y="CountryCode")
View(playa)
view(educ)
View(educ)
playa$Special.Notes
grep("^Fiscal year end: June", playa$Special.Notes)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
sampleTimes
?getSymbols
amzn
amzn[1]
amzn[2]
library(dplyr)
penis <- tbl(amzn)
penis <- data.frame(amzn)
head(penis)
names(penis)
penis[1,1]
row.names(penis)
row.names(penis[1])
row.names(penis[,1])
penis$date <- row.names(penis)
View(penis)
class(penis$date)
library(lubridate)
penis$date <- ymd(penis$date)
penis$weekday <- weekdays(penis$date)
View(penis)
penis[1,6]
penis[1,8]
penis[1,8] == "Wednesday"
selectron <- penis[year(penis$date)==2012,]
sum(selectron$weekday="Monday")
sum(selectron$weekday=="Monday")
library("lubridate")
srcFile <- "household_power_consumption.txt"
baseData <- read.table(file = srcFile, header = TRUE, sep = ";", na.strings = "?")
setwd("~/R/Projects/Exploratory Data Analysis")
srcFile <- "household_power_consumption.txt"
baseData <- read.table(file = srcFile, header = TRUE, sep = ";", na.strings = "?")
plotData <- baseData[baseData$Date=="1/2/2007" | baseData$Date=="2/2/2007",]
plotData$DateTime <- parse_date_time(paste(plotData[,1],plotData[,2]), "dmyhms")
plot(plotData$Global_active_power, plotData$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xaxt = "n", xlab = "")
plot(plotData$Global_active_power, plotData$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
plot(y = plotData$Global_active_power, x=plotData$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
setwd("~/R/Projects/Exploratory Data Analysis/ExData_Plotting1")
source("plot1.R")
plot(x= plotData$datetime, y = plotData$Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
plot(x= plotData$datetime, y = plotData$Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
plot(x= plotData$DateTime, y = plotData$Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
plot1()
source("plot2.R")
plot2()
source("plot3.R")
plot3()
source("plot3.R")
source("plot3.R")
plot3()
source("plot4.R")
plot4()
par("mar")
source("plot4.R")
plot4()
par(bg = 'white', mfrow=c(2,2), mar = c(3.1,4.1,2.1, 2.1))
plot(x = plotData$datetime, y = plotData$Voltage, type = "l", ylab = "Voltage")
plot(x = plotData$DateTime, y = plotData$Voltage, type = "l", ylab = "Voltage")
plot(x = plotData$DateTime, y = plotData$Voltage, type = "l", ylab = "Voltage")
plot(x = plotData$DateTime, y = plotData$Voltage, type = "l", ylab = "Voltage")
plot(x = plotData$DateTime, y = plotData$Voltage, type = "l", ylab = "Voltage")
dev.off()
par(bg = 'white', mfrow=c(2,2), mar = c(2.1,4.1,1.1,2.1))
plot(x = plotData$datetime, y = plotData$Voltage, type = "l", ylab = "Voltage")
plot(x = plotData$DateTime, y = plotData$Voltage, type = "l", ylab = "Voltage")
plot(x = plotData$DateTime, y = plotData$Voltage, type = "l", ylab = "Voltage")
plot(x = plotData$DateTime, y = plotData$Voltage, type = "l", ylab = "Voltage")
plot(x = plotData$DateTime, y = plotData$Voltage, type = "l", ylab = "Voltage")
source("plot4.R")
source("plot4.R")
plot4()
